@startuml Product Management System Class Diagram
skinparam classAttributeIconSize 0
skinparam componentStyle rectangle

' =====================
' Sales System
' =====================
class User {
    - userId : int
    - userName : string
    - address : string
    - phoneNumber : string
    - emailAddress : string
    - paymentInfo : string
    - password : string
    + register()
    + getUser()
    + updateUser()
    + deleteUser()
}

class Cart {
    - cartId : int
    - userId : int
    + addItemToCart()
    + removeItemFromCart()
    + changeQuantity()
    + viewCart()
    + calculateSubtotal()
}

class CartItem {
    - quantity : int
    - subtotal : decimal
    + getProduct()
    + changeQuantity()
    + calculateSubtotal()
}

' =====================
' Management System
' =====================
class Admin {
    - adminId : int
    - adminName : string
    - managementHistory : string[] / json
    + getAdminInfo()
    + updateAdminInfo()
    + getManagementHistory()
}

class PaymentHistory {
    - paymentId : int
    - userId : int
    - orderId : int
    - paymentMethod : string
    - paymentAmount : decimal
    - paymentDate : datetime
    + getPaymentHistory()
    + createPaymentHistory()
    + updatePaymentHistory()
}

' =====================
' Common System
' =====================
class Product {
    - productId : int
    - productName : string
    - description : text
    - price : decimal
    - stock : int
    - category : string
    + getProductInfo()
    + addProduct()
    + updateProduct()
    + deleteProduct()
    + updateStock()
}

class Order {
    - orderId : int
    - userId : int
    - orderDate : datetime
    - shippingFee : decimal
    - totalPrice : decimal
    - orderStatus : int {1: Pending, 2: Completed}
    + createOrder()
    + getOrder()
    + updateOrder()
    + cancelOrder()
}

class OrderDetail {
    - orderDetailId : int
    - quantity : int
    - subtotal : decimal
    + getOrderDetail()
    + addOrderDetail()
    + updateOrderDetail()
}

class Shipment {
    - shipmentInstructionId : int
    - orderDetailId : int
    + sendShipmentRequest()
    + selectShipmentTarget()
    + addShipmentInfo()
    + getShipmentInfo()
    + updateShipmentInfo()
}

class ShippingCarrier {
    - trackingNumber : string
    - shippingDate : date
    - estimatedArrivalDate : date
    + getShippingStatus()
    + addShippingSchedule()
    + updateShippingSchedule()
}

class Return {
    - returnId : int
    - returnDate : date
    - reasonForReturn : text
    - returnStatus : int {1: Requesting, 2: Completed}
    + requestReturn()
    + updateReturnStatus()
    + addReasonForReturn()
    + approveReturn()
    + rejectReturn()
}

' Refund class remains commented out

' =====================
' Relationships (Multiplicity set)
' =====================

' User o-- Cart
User "1" o-- "1" Cart

' Cart o-- CartItem
Cart "1" o-- "0..*" CartItem

' CartItem *-- Product (Composition)
CartItem "*" *-- "1" Product

' User o-- Order
User "1" o-- "0..*" Order

' Order o-- OrderDetail
Order "1" o-- "1..*" OrderDetail

' Order o-- Shipment
Order "1" o-- "0..*" Shipment

' OrderDetail *-- Product (Composition)
OrderDetail "*" *-- "1" Product

' Shipment o-- ShippingCarrier
Shipment "0..*" o-- "1" ShippingCarrier

' Return o-- OrderDetail
Return "0..*" o-- "1" OrderDetail

' ' Return o-- Refund (remains commented out)

' Admin o-- PaymentHistory
Admin "1" o-- "0..*" PaymentHistory

@enduml